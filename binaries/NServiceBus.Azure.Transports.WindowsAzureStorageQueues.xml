<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NServiceBus.Azure.Transports.WindowsAzureStorageQueues</name>
    </assembly>
    <members>
        <member name="T:NServiceBus.Azure.Transports.WindowsAzureStorageQueues.AzureMessageQueueCreator">
            <summary>
            Creates the queues. Note that this class will only be invoked when running the windows host and not when running in
            the fabric
            </summary>
        </member>
        <member name="P:NServiceBus.Azure.Transports.WindowsAzureStorageQueues.AzureMessageQueueReceiver.PeekInterval">
            <summary>
            Sets the amount of time, in milliseconds, to add to the time to wait before checking for a new message
            </summary>
        </member>
        <member name="P:NServiceBus.Azure.Transports.WindowsAzureStorageQueues.AzureMessageQueueReceiver.MaximumWaitTimeWhenIdle">
            <summary>
            Sets the maximum amount of time, in milliseconds, that the queue will wait before checking for a new message
            </summary>
        </member>
        <member name="P:NServiceBus.Azure.Transports.WindowsAzureStorageQueues.AzureMessageQueueReceiver.PurgeOnStartup">
            <summary>
            Sets whether or not the transport should purge the input
            queue when it is started.
            </summary>
        </member>
        <member name="P:NServiceBus.Azure.Transports.WindowsAzureStorageQueues.AzureMessageQueueReceiver.MessageInvisibleTime">
            <summary>
            Controls how long messages should be invisible to other callers when receiving messages from the queue
            </summary>
        </member>
        <member name="P:NServiceBus.Azure.Transports.WindowsAzureStorageQueues.AzureMessageQueueReceiver.BatchSize">
            <summary>
            Controls the number of messages that will be read in bulk from the queue
            </summary>
        </member>
        <member name="M:NServiceBus.Azure.Transports.WindowsAzureStorageQueues.MessageRetrieved.Unwrap">
            <summary>
            Unwraps the raw message.
            </summary>
            <returns>Returns the message wrapper.</returns>
        </member>
        <member name="M:NServiceBus.Azure.Transports.WindowsAzureStorageQueues.MessageRetrieved.Ack">
            <summary>
            Acknowledges the successful processing of the message.
            </summary>
        </member>
        <member name="M:NServiceBus.Azure.Transports.WindowsAzureStorageQueues.MessageRetrieved.Nack">
            <summary>
            Rejects the message requeueing it in the queue.
            </summary>
        </member>
        <member name="P:NServiceBus.Azure.Transports.WindowsAzureStorageQueues.UnableToDispatchException.Queue">
            <summary>
            The queue name dispatch was sending a message to.
            </summary>
        </member>
        <member name="P:NServiceBus.Azure.Transports.WindowsAzureStorageQueues.UnableToDispatchException.Namespace">
            <summary>
            The queue namespace dispatch was sending a message to.
            </summary>
        </member>
        <member name="M:NServiceBus.Azure.Transports.WindowsAzureStorageQueues.UnableToDispatchException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Gets the object data for serialization purposes.
            </summary>
        </member>
        <member name="M:NServiceBus.Azure.Transports.WindowsAzureStorageQueues.SettingsExtensions.TryApplyValue``1(NServiceBus.Settings.ReadOnlySettings,System.String,System.Action{``0})">
            <summary>
            Applies the settings value when present by invoking <paramref name="apply" />.
            </summary>
        </member>
        <member name="M:NServiceBus.AzureStorageAddressingSettings.Map(System.String)">
            <summary>
            Maps the account name to a connection string, throwing when no mapping found.
            </summary>
        </member>
        <member name="M:NServiceBus.AzureStorageAddressingSettings.ApplyMappingToLogicalName(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Transforms all the <see cref="T:NServiceBus.Azure.Transports.WindowsAzureStorageQueues.Config.QueueAddress" /> in <see cref="F:NServiceBus.AzureStorageAddressingSettings.headersToApplyNameMapping" /> to use logical names.
            </summary>
        </member>
        <member name="M:NServiceBus.AzureStorageAddressingSettings.ApplyMappingOnOutgoingHeaders(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Transforms all the <see cref="T:NServiceBus.Azure.Transports.WindowsAzureStorageQueues.Config.QueueAddress" /> in <see cref="F:NServiceBus.AzureStorageAddressingSettings.headersToApplyNameMapping" /> to connection string
            values to maintain backward compatibility.
            </summary>
        </member>
        <member name="M:NServiceBus.IAzureStoragePartitioningSettings.AddStorageAccount(System.String,System.String)">
            <summary>
            Adds a mapping between a logical name and a connection string.
            </summary>
        </member>
        <member name="M:NServiceBus.IAzureStoragePartitioningSettings.UseAccountNamesInsteadOfConnectionStrings">
            <summary>
            Configures this endpoint as one, using logical names of the accounts instead of connection strings when sending.
            </summary>
        </member>
        <member name="T:NServiceBus.AzureStorageQueueTransport">
            <summary>
            Transport definition for AzureStorageQueue
            </summary>
        </member>
        <member name="M:NServiceBus.AzureStorageTransportExtensions.PeekInterval(NServiceBus.TransportExtensions{NServiceBus.AzureStorageQueueTransport},System.Int32)">
            <summary>
            Sets the amount of time, in milliseconds, to add to the time to wait before checking for a new message
            </summary>
        </member>
        <member name="M:NServiceBus.AzureStorageTransportExtensions.ConnectionString(NServiceBus.TransportExtensions{NServiceBus.AzureStorageQueueTransport},System.String)">
            <summary>
            Sets the connectionstring to Azure Storage
            </summary>
        </member>
        <member name="M:NServiceBus.AzureStorageTransportExtensions.MaximumWaitTimeWhenIdle(NServiceBus.TransportExtensions{NServiceBus.AzureStorageQueueTransport},System.Int32)">
            <summary>
            Sets the maximum amount of time, in milliseconds, that the queue will wait before checking for a new message
            </summary>
        </member>
        <member name="M:NServiceBus.AzureStorageTransportExtensions.MessageInvisibleTime(NServiceBus.TransportExtensions{NServiceBus.AzureStorageQueueTransport},System.Int32)">
            <summary>
            Controls how long messages should be invisible to other callers when receiving messages from the queue
            </summary>
        </member>
        <member name="M:NServiceBus.AzureStorageTransportExtensions.MessageInvisibleTime(NServiceBus.TransportExtensions{NServiceBus.AzureStorageQueueTransport},System.TimeSpan)">
            <summary>
            Controls how long messages should be invisible to other callers when receiving messages from the queue
            </summary>
        </member>
        <member name="M:NServiceBus.AzureStorageTransportExtensions.BatchSize(NServiceBus.TransportExtensions{NServiceBus.AzureStorageQueueTransport},System.Int32)">
            <summary>
            Controls how many messages should be read from the queue at once
            </summary>
        </member>
        <member name="M:NServiceBus.AzureStorageTransportExtensions.SerializeMessageWrapperWith``1(NServiceBus.TransportExtensions{NServiceBus.AzureStorageQueueTransport})">
            <summary>
            Sets a custom serialization for <see cref="T:NServiceBus.Azure.Transports.WindowsAzureStorageQueues.MessageWrapper" /> if your configurations uses serialization different
            from <see cref="T:NServiceBus.XmlSerializer" /> or <see cref="T:NServiceBus.JsonSerializer" />.
            </summary>
        </member>
        <member name="M:NServiceBus.AzureStorageTransportExtensions.UseSha1ForShortening(NServiceBus.TransportExtensions{NServiceBus.AzureStorageQueueTransport})">
            <summary>
            Overrides default Md5 shortener for creating queue names with Sha1 shortener.
            </summary>
        </member>
        <member name="M:NServiceBus.AzureStorageTransportExtensions.DegreeOfReceiveParallelism(NServiceBus.TransportExtensions{NServiceBus.AzureStorageQueueTransport},System.Int32)">
            <summary>
            Sets the degree of parallelism that should be used to receive messages.
            </summary>
        </member>
    </members>
</doc>
